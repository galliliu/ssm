<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        ">

    <!-- 引入数据库配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- sessionFactory配置
        1、连接池引用
        2、mybaits-config.xml的配置文件
        3、映射文件引入
    -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:me/galliliu/ssm/mapper/*Mapper.xml"/>
    </bean>

    <!-- 事务管理器tx -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 需要数据连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 事务模板 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 切入点aop where -->
    <aop:config>
        <aop:pointcut expression="execution(* me.galliliu.ssm.service.*Service.*(..))" id="txPoint"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!-- 开启spring注解解析器 -->
    <context:annotation-config/>

    <!-- 扫描那些包 -->
    <context:component-scan base-package="me.galliliu.ssm"/>

    <!-- 因为接口贴service，componnet，controller等标签，也无法创建对象，这里配置一个mappersanner扫描 -->
    <bean id="mapperScan" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 定义哪些包需要扫描 -->
        <property name="basePackage" value="me.galliliu.ssm.mapper"/>
        <!-- 多个数据源才需要配置这个属性 -->
        <!-- <property name="sqlSessionFactory" ref="sessionFactory"/> -->
    </bean>
</beans>